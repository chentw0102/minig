Step 1 : get external dependencies
==================================

Download & unpack GWT from
http://code.google.com/webtoolkit/download.html

The directory where GWT unpacked is GWT_HOME.

Required version : GWT 1.7.0+

Step 2 : create user specific setup
===================================

./gen_run_scripts.sh <GWT_HOME>


Step 3 : build as a webapp
==========================

ant dist

The build.xml file is configured to create a complete webapp structure
in the 'dist' directory.


One step 1, 2 3 are completed :

Running in GWT shell
====================

./run_in_shell.sh

(just click on "login")

Running in Tomcat
=================

Put tomcat 6.0.18 archive in the current dir

./run_in_tomcat.sh

Point your browser to http://localhost:8080/WebmailUI.html

The paragraph "Production setup" (in this file) has more informations
on tomcat based installation.

Note : the default configuration runs without IMAP server & webmail-backend


Import in eclipse
=================

WARNING : step 1 & 2 are mandatory to get a correct eclipse project
setup.

File > Import... > General / Existing projects into workspace > Next

"Select root directory" and browse to your "webmail/webmail-fronted/gwt" folder

Select the WebmailUI project

DO NOT check "copy projects into workspace"

To run in eclipse, click the "Run" button in the toolbar. This uses
the WebmailUI.lauch configuration.

Production setup
================

default configuration runs without webmail backend & IMAP server,
using a dummy backend client implementation.

For production/real setup, copy webmail_frontend_conf.ini to the
/etc/obm directory and :
 * Set the frontend.gwt.proxyClientFactoryClass variable to the real
backend client factory implementation.

 * Adjust the frontend.proxyUrl variable to point your webmail
   backend. Valid values are ;
       * fr.aliasource.webmail.server.proxy.client.DummyProxyClientFactory
       *

 * Deploy the webapp built with "ant dist" to your tomcat server
   (using the /run_in_tomcat.sh works to for testing a complete setup).

 * Point your browser to http://localhost:8080/WebmailUI.html

With the current state of the code, login works as follows :

 * /etc/obm/webmail_frontend_conf.ini not found : performs dummy login
   with dummy backend

 * /etc/obm/webmail_frontend_conf.ini found : frontend.ajaxLogin is
   read by the LoginFilter, but as ajaxLogin is the only implemented
   procedure, you will get the ajax login form even if set to false.

